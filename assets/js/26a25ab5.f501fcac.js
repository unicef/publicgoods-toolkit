"use strict";(self.webpackChunkpublicgoods_toolkit=self.webpackChunkpublicgoods_toolkit||[]).push([[628],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),h=c(n),d=o,m=h["".concat(l,".").concat(d)]||h[d]||u[d]||i;return n?a.createElement(m,s(s({ref:t},p),{},{components:n})):a.createElement(m,s({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=h;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r.mdxType="string"==typeof e?e:o,s[1]=r;for(var c=2;c<i;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5117:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return r},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return h}});var a=n(7462),o=n(3366),i=(n(7294),n(3905)),s=["components"],r={sidebar_position:5},l="Open-Source Readiness",c={unversionedId:"readiness",id:"readiness",isDocsHomePage:!1,title:"Open-Source Readiness",description:"KEY RECOMMENDATION: Evaluate teams against organizational open-source",source:"@site/docs/readiness.md",sourceDirName:".",slug:"/readiness",permalink:"/publicgoods-toolkit/readiness",editUrl:"https://github.com/unicef/publicgoods-toolkit/edit/main/docs-website/docs/readiness.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Policy",permalink:"/publicgoods-toolkit/policy"},next:{title:"Procurement",permalink:"/publicgoods-toolkit/procurement"}},p=[],u={toc:p};function h(e){var t=e.components,n=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"open-source-readiness"},"Open-Source Readiness"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"KEY RECOMMENDATION"),": Evaluate teams against organizational open-source\n'readiness models'\nto guide capacity\ndevelopment.  "),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"KEY RECOMMENDATION"),": Identify small-scale, lower-risk investments for skill-building\nexperiments. These can often be aimed at places where your lack of open-source investment\nis\ncausing problems (e.g. lack of re-usability)."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"KEY RECOMMENDATION"),": Be sure to include areas\nof 'adjacent value' when assessing the overall value of your DPG.\nThese can be multipliers to your project's valuation. "),(0,i.kt)("p",null,"EXAMPLE: The ",(0,i.kt)("a",{parentName:"p",href:"https://geonode.org/"},"GeoNode project"),", initiated by the\nWorld Bank's Global Facility for Disaster Reduction and Recovery\n(GFDDR), realized significant but difficult-to-quantify value through\nthe vibrant commercial community that grew around the project. In\ntime, these contributors became so active and financially committed to\nthe project's continued development that ",(0,i.kt)("a",{parentName:"p",href:"https://opendri.org/wp-content/uploads/2017/03/OpenDRI-and-GeoNode-a-Case-Study-on-Institutional-Investments-in-Open-Source.pdf"},"GFDDR was able to scale back\nits\ninvestment"),". This dynamic outcome is hard to capture in most models. "),(0,i.kt)("p",null,"Open source is all about execution.  Reaping the benefits of open-source\ninvestment requires completing a series of difficult steps\nranging from designing an initial strategy to building an appropriate\ncommunity to leveraging the resulting dynamics for strategic\nadvantage, whether that be scaling to broad adoption quickly or\norchestrating participants to focus on areas of needed innovation.  "),(0,i.kt)("p",null,"This module presents a somewhat abstract but experientially\nbased view of organizational readiness for open source, including models to consider\nreferencing, and practical advice for how to move your team along the\npath to masterful open-source execution.  The ",(0,i.kt)("a",{parentName:"p",href:"/publicgoods-toolkit/adoptability#adoptability-assessment"},"Adoptability")," module delves more deeply into specific open-source capabilities you'll\nneed to effectively adopt or build an open-source product.  Note that the use of\nthe term 'team' here also includs external vendors. "),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"FUTURE WORK"),": What have DPG creators learned about building local vendor and\nlabor capacity and readiness?  What are typical readiness and capacity growth\npatterns for\norganizations working with open data and AI models, and how might this apply to\nagencies building DPGs?  "),(0,i.kt)("p",null,"Most government teams are not yet prepared to travel this capability\npath and reap those rewards at scale.  They lag in their ability to\nexecute, largely because they don't have enough experience,\nparticularly as compared to private industry.  But governments can\nlearn quickly from what's been tried and tested by others as they've\nbuilt organizational capacity to use open source to\nits full potential."),(0,i.kt)("p",null,'As an agency starts to climb the learning curve, it can be helpful to\nassess current abilities as a form of organizational readiness and to\ndescribe the journey to mastery as one of gaining capability.  Practitioners often\ndescribe this as climbing the "readiness ladder".  To do\nthis, we might locate current capabilities in a readiness model.\nThese clarify where an agency is in its journey to mastery and suggest\nnext steps and likely results.  Often, teams use these models to\nidentify areas for potential growth as well as potential pitfalls.\nThey are most useful for those early in their open-source progress,\nand this module focuses on those beginning stages. '),(0,i.kt)("p",null,"It is useful for an agency to consider its maturity on an organization\nwide basis, but creation of an open-source DPG is usually executed by\nteams, and it is the capabilities of specific teams that matter most.\nTherefore, this module considers individual teams as the starting\npoint for analysis, because even agency-wide open-source skills\ntraining will succeed or fail mostly at the level of specific teams\nworking on specific projects.  However, teams obviously work within an\norganization that shapes their operational environment, and at some\npoint the broader the organizational view matters.  When and under\nwhat conditions this occurs is very case dependent."),(0,i.kt)("p",null,"There are several readiness models that go by various names.\nWe\nshare a number of them here because it is often worth considering more\nthan one when examining an organization or a particular team."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://mcaffer.com/2019/02/Open-source-engagement"},"Jeff McAffer's Engagement Model"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/todogroup/ospo101/blob/main/module2/README.md#climbing-the-open-source-ladder"},"TODO Group model"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/github/maturity-model"},"GitHub's Maturity Model"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/OpenSource_Maturity_Model"},"Qalipso's Model"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://opensource.com/life/15/4/what-does-an-adult-look-like-in-an-open-source-community"},"Stephen Walli's Maturation Toward Adulthood"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://www.finos.org/hubfs/FINOS/website/pages/community/Open%20Source%20Readiness%20Roadmap%20-%203.10.2018.png"},"FinOS Open Source Ladder")))),(0,i.kt)("p",null,"Of the published models, we find the first one -- written by Microsoft\nSenior Director Jeff McAffer (now Senior Director at GitHub)-- is\nparticularly useful.  It's simple but includes strategic components,\naccounts for realistic failure modes, and understands that open-source\nreadiness will be unevenly distributed in any agency large enough to\nhave multiple teams.  We also like how it describes the phases of\ncapability growth almost like generalized 'mental models' at an\norganization or team level in a way that's both abstract and\npragmatic.  We've found that stepping back every so often to reflect\nusing such shared language and concepts helps teams stay grounded in\nthe big picture, rather than focusing exclusively on the details."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"KEY RECOMMENDATION"),": Engage the team in a frank discussion about\nyour open-source readiness and locate the team and the organization on\nMcAffer's engagement model.  What might this level mean for\nopportunities for growth, and what might it mean for potential problems?\nIdentify three key steps the people in that discussion can take to\nimprove execution capabilities at the team level and keep checking in\nas the team develops."),(0,i.kt)("p",null,'On many teams, initial open-source capabilities might be nascent.\nTeam members might not have had significant (or perhaps even any)\nexperience using open-source strategies to create value.  The team\nlikely works in an environment where FOSS investment is rare, and many do not\nsee much reason to change that.  That lack of knowledge might\ntranslate in some quarters into hostility toward FOSS.  People will\nsay "It can never work here" even as open source slowly seeps into\nmore and more of the technology around them.'),(0,i.kt)("p",null,"At this stage, open-source strategies will be difficult to execute.\nInternal political risks might be high.  Policies needed to engage\nopen source productively might be missing.  Staff might not know how\nto begin working with external open-source contributors.  Many people\nmight lack even a basic understanding of what it means to do open-source\nwork.  Efforts to work in an open-source mode suffer from an\nincreased risk of failure, and they might fail in ways that reinforce\nthe belief that open source is not worth further consideration."),(0,i.kt)("p",null,"Many factors might move a team past this early stage and on their way\ntoward tolerating open source, but movement usually comes from\nexternal pressure, changing environments, and staff additions and\nturnover.  As conditions around an agency begin to change, and the\ncosts and risks of refusing to engage start to rise, pressure to\nengage open source will increase."),(0,i.kt)("p",null,"Those costs might include the pain of maintaining internal forks of\nexternal open-source projects. Or more commonly, the risks of ",(0,i.kt)("em",{parentName:"p"},"not"),"\nmaintaining all those forks.  Similarly, the benefits of making minor\nopen-source investments start to become clear, even if only because\nother teams will begin to reap those benefits and your team gains\ngood, internal examples to follow."),(0,i.kt)("p",null,'However any specific team begins to adapt, climbing the learning curve\nis often an exercise in experimentation.  Most don\'t think of open-source\ninvestment in those terms.  Instead, they cast initial open-source\nforays as making small concessions to necessity.  Some see\nthese experiments as seizing unique, non-repeatable advantages.  Most\ndon\'t think of those small, initial projects as the future direction\nof the team.  More teams should consider the possibility, though.\nSometimes, explicitly labeling such experiments as learning exercises\nand skill-building allows a team to maximize the value of those\nexperimental investments.  It prioritizes reflective analysis and\nlearning.  It gives permission to fail.  Those can be useful to teams\nseeking adaptability.  When considering McAffer\'s model, we might\nrelabel his "tolerance" phase as "experimentation".'),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"KEY RECOMMENDATION"),": Look for the places where your lack of\nopen-source investment are causing problems that can be addressed by\nsmall-scale, low-risk experiments.  Start there, being\nsure to label these experiments as skill-building exercises.  Think\nabout how you can engage your larger team or organization as you\ndevelop, making the learning relevant to their own needs and goals and\nbringing them along as allies."),(0,i.kt)("p",null,"Experiments come in many forms, but the most common first experiment\nis using some outside open-source code and engaging the open-source\nproject.  That might involve filing bug reports, offering a\ncontribution, or merely participating in project mailing lists and\nforums.  These are all relatively low-risk, low-investment ways to\nbegin connecting a team to outside FOSS projects.  If your team's\nfuture plans include larger-scale open-source engagement, building\nskills through these kinds of small-scale experiments can be very\nproductive."),(0,i.kt)("p",null,"The experimentation phase is usually a skill-building and\nknowledge-gaining phase because it exercises the skills that cause a\nteam to shift from merely tolerating open source to trying to harness\nit.  Having those skills throughout a team provides the vision that\nstarts to shift attitudes at more than just an individual level."),(0,i.kt)("p",null,"The problem that arises, especially as multiple teams start to embrace\nFOSS, is that they lack the infrastructure to succeed at it across the\nentire organization.  They are missing policies, auditing, skills,\nculture, and experience.  This is a pivotal, risky moment.  A large\nnumber of teams will still be in the initial phases.  Efforts to move\ninternal culture toward open source will be perceived by some as a\npointless shift toward the latest buzzword.  Despite your best\nattempts to share learning across the organization, experimental\nskills will still be unevenly distributed internally.  Many new\nopen-source projects will fail, and this will convince some that all\nopen source is destined to fail.  The proverbial 'trough of\ndisillusionment' will seem unbridgable.  In some agencies, some might\neven sabotage open-source projects for policy or political reasons."),(0,i.kt)("p",null,"McAffer sees this phase as one of hype, and perhaps that's because\nit's also when an agency embraces open source without quite being\nready to execute.  Agencies in this phase tend to engage FOSS in\nshallow, unsophisticated ways simply because they don't yet have the\nexperience to make better strategic use of open-source opportunities.\nThe way to move past this stage is not to reduce the hype (though that\nmight help) but rather to increase readiness."),(0,i.kt)("p",null,"When an agency reaches this stage, it will have multiple teams eager\nto do open source and multiple teams still wary of the change.\nManagers at this stage will need guidance on using FOSS as a strategic\ncomponent and managing teams with increasingly external deliverables.\nDevelopers will need technical infrastructure, easy-to-follow\nlicensing policies, and permission to engage externally.  Perhaps more\nimportantly, they will need to develop new habits of working in the\nopen and sharing even early, rough versions of their work.  Beyond\njust technical teams, Human Resources will need hiring and\ncompensation guidance as both skills and performance evaluation\ncriteria shift.  Building internal systems that provide all of those\npieces is how agencies gain proficiency.  Adding skills, process, and\npolicy is how that happens, and it requires management approval and\nresources.  Agencies that fail to provide this support from fairly\nhigh in the organization tend to level off at this level of readiness."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"RECOMMENDATION"),": If you've been tracking your team's growth in\nexecution capabilities and bringing others along on your learning\njourney, you should have a good ",(0,i.kt)("em",{parentName:"p"},"shared")," understanding of what skills,\nprocesses, and policies you need to execute successfully, along with\nproof points of the value such investments will bring.  This will help you\npresent a strong recommendation to your organization's leadership and\nhelp you move from the Hype to Proficient stage in McAffer's readiness\nmodel. (Remember that\nthese skills can come from external vendors as well as your internal team. Both\napproaches help you build a deeper talent pool).  "),(0,i.kt)("p",null,"Another consideration for agencies climbing the readiness ladder is\nthat the need for skilled open-source practitioners will almost always\nexceed the supply.  The demand for open-source skills is growing so\nfast. The world does not have enough experienced open-source\nstrategists and developers to keep up.  A number of companies and\nuniversities have decided to address this problem by centralizing much\nof their open-source expertise in an Open Source Programs Office\n(OSPO).  The OSPO's job is to use that collected expertise to improve\nopen-source readiness and efficacy across the entire organization,\noften managing common issues like license compliance, developing an\nopen-source culture, ensuring high quality code releases, and\nadvising on software tools.  The Linux Foundation provides a good\n",(0,i.kt)("a",{parentName:"p",href:"https://www.linuxfoundation.org/resources/open-source-guides/creating-an-open-source-program/"},"overview of the role and value of\nOSPOs"),".  The\n",(0,i.kt)("a",{parentName:"p",href:"https://todogroup.org/"},"TODO Group")," is collection of private industry\nOSPOs that also provides open guidance and resources."),(0,i.kt)("p",null,"We are not aware of many agencies that have an OSPO, but governments\nshould consider focusing open-source readiness efforts on one agency\nor department that can then help others.  In the United States, the\nfederal government's General Services Administration (GSA) did this\nwith ",(0,i.kt)("a",{parentName:"p",href:"https://18f.gsa.gov/"},"18F"),", which, after reaching relatively\nhigh levels of open-source capability and knowledge, developed\nguidance for other agencies approaching open source.  GSA's Code.gov\nhas created a\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/GSA/code-gov-open-source-toolkit"},"toolkit")," that\ngives agencies guidance around creating and maintaining federal source\ncode inventories and open-source repositories."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"RECOMMENDATION"),": At the organizational level, Open Source\nProgram Offices can help teams work more effectively and efficiently\nin open source.  As you move up the readiness ladder, consider if such\na centralized operational function would help the organization to\nexecute better."),(0,i.kt)("p",null,"A final note on understanding and communicating the value or\ncost-effectiveness of open source.  Gaining a more sophisticated\nunderstanding of this value - and having that understanding more\nbroadly shared across an organization and its supporters - is both a\nprerequisite to and a marker of moving along these readiness\nmodels. Moreover, organizational decision makers and funders will want\nto know the cost/benefit ratio or the return on their open-source investment and\nmight also want to compare the approach to alternatives."),(0,i.kt)("p",null,"Ultimately, the value of your DPG will depend upon how well you've met\nyour goals: a qualitative and quantitative assessment of the DPG's\npositive impact on people's lives.  How you'll first estimate and\nlater actually measure this social impact is one of the first items to\ndefine in your project -- this obviously goes hand-in-hand with goal\nsetting -- and the certainty of your measurements should improve with\ntime."),(0,i.kt)("p",null,"There are tools out there that can help you make some cost and benefit\ndeterminations, but none capture the full value of an open-source approach --\nespecially specific to your context -- and it's likely that you'll\nneed to modify some combination of these tools to your needs. "),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"FUTURE WORK"),": Can we identify a common but customizable approach to DPG valuation\nthat takes into account how open approaches -- for content, data, and software --\ncreate areas of new value and models for how these could have future multiplier\neffects?  "),(0,i.kt)("p",null,"The World Bank's ",(0,i.kt)("a",{parentName:"p",href:"https://opendri.org/wp-content/uploads/2017/03/OpenDRI-and-GeoNode-a-Case-Study-on-Institutional-Investments-in-Open-Source.pdf"},"Open Data for Resilience Initiative & GeoNode:A Case\nStudy in Institutional Investments in Open\nSource")," does a good job measuring key open-source-related intangibles.  Although it's\nhard to distill the\napproach taken in the paper into a formal framework, it can be\ndescribed as paying attention to areas of adjacent value.  This\napproach aligns pretty naturally with thinking of an open-source\nproject as part of an ecosystem -- or a set of ecosystems, from contribution\nthrough adoption -- which will likely be the case for\nmost DPGs that aim for broad social impact."),(0,i.kt)("p",null,"Looking only at the cost of writing code themselves versus the value\nreceived from sharing costs with partners, it's conservatively estimated that the\nGeoNode project brought around a 200% return on investment (as of\n2017).  But the ",(0,i.kt)("em",{parentName:"p"},"real")," value of open-source development to the World\nBank's Global Facility for Disaster Reduction and Recovery (GFDRR),\nthe leading organization behind GeoNode, was the self-sustaining\nopen-source GeoNode community that emerged and the benefits that community\ncontinues to deliver.  For example, a consortium of U.S. government\nagencies quickly picked up development work on the core of GeoNode --\nvalued at over $1 million USD -- which permitted GFDRR to tune its\nresource investments to features it specifically needed.  Companies\nbegan providing commercial support, helping to grow further investment\nin GeoNode.  A growing user base made it easier to identify and\nprioritize areas for improvement.  These are several of many aspects\nof GeoNode's community and ecosystem that prove there's greater value\nin open source than what's captured in existing valuation frameworks."),(0,i.kt)("p",null,"However you ultimately decide to approach valuing your DPG, start from a\nholistic view of your project and map out the potential benefits\nand related costs of open source, being realistic about what you can actually measure\nand prioritizing what will have the most cost and/or the most benefit\nper the goals of your project. Not everything is relevant. "),(0,i.kt)("p",null,"Some valuation frameworks and tools we recommend reviewing and adapting include: "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The Digital Impact Alliance publishes a great overview of five\ndifferent ways of valuing the impact of ICT investments, ",(0,i.kt)("a",{parentName:"p",href:"https://digitalimpactalliance.org/wp-content/uploads/2020/10/ICT4D-toolkit.pdf"},"A Valuing\nImpact Toolkit for ICT\nInvestment"),",\nthat includes guidance on which might be most fitting, depending on\nfactors such as available resources, skills and data -- important\nconsiderations for any organization but perhaps particularly for those\nin low-resource environments.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"To get much deeper into the cost assessment side of software, USAID\nhas published the ",(0,i.kt)("a",{parentName:"p",href:"https://www.usaid.gov/cii/software-global-goods-valuation-framework"},"Software Global Goods Valuation\nFramework"),"\n(with an accompanying spreadsheet) to assess cumulative development\ncosts through an analysis of both retrospective and ongoing costs.\nAlthough aimed at digital health products, it fits other application\nareas as well.  Perhaps most interesting to this model is its\ninclusion of a method for analyzing the cost of code, called the\nConstructive Cost Model (COCOMO 81).")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"For an example of how the World Bank measured the direct fiscal (not social)\nimpact of Estonia's X-road project (a post facto measure), see\n",(0,i.kt)("a",{parentName:"p",href:"https://thedocs.worldbank.org/en/doc/165711456838073531-0050022016/original/WDR16BPEstonianeGovecosystemVassil.pdf"},"Estonian e-Government Ecosystem: Foundation, Applications,\nOutcomes"),",\nwhich extrapolates a narrow view of fiscal value from the number of\nqueries made to the system.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The Grameen Foundation published an ",(0,i.kt)("a",{parentName:"p",href:"https://mifos.org/blog/documenting-technology-impact-mifos-roi-model-case-studies/"},"in-depth financial ROI\nframework"),"\nto help microfinance institutions (MFIs) forecast and analyze the\nbenefits of adopting the DPG ",(0,i.kt)("a",{parentName:"p",href:"https://mifos.org/"},"Mifos"),", the open-source\nplatform for microfinance. It highlights that the decision to adopt\nand deploy Mifos cannot be based only on the ROI analysis, noting the\nimportance of understanding non-financial intangibles, like creating a\nbetter foundation for future innovation. The framework doesn't include\nthese intangibles, which can have different prioritization and value\nacross implementations. Despite that limitation -- and the fact that the framework is unique\nto Mifos and MFIs and thus isn't an exact model for other projects to\nfollow -- it's a well reasoned approach to a broader view of benefits\n(categorized as increased revenues and decreased costs specific to how\nMFIs function) and costs (categorized as project expenses, like data\nmigration and staff time) that's worth reviewing. It's a thoughtfully bounded\napproach that's specific to their context and audience.  For those looking to\ncreate a DPG with the goal of broad adoption across different locales\nwith slightly different contexts, it's also worth studying how the Grameen\nFoundation created this tool to help MFIs more effectively adopt their\nDPG. "))),(0,i.kt)("p",null,"Again, none of the above models quantify and incorporate the value of\nthe intangible benefits of open source very well, although their costs\nare generally captured."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"KEY RECOMMENDATION"),": Be sure to include areas\nof 'adjacent value' when assessing the overall value of your DPG.\nThese can be multipliers to your project's valuation. "),(0,i.kt)("p",null,"All of the above describes a path from the very beginning toward\neventual mastery of open source.  Our discussion focused on readiness\nin terms of skills and capabilities, but the truth is that doing open\nsource well is more of a cultural shift than anything\nelse. Organizations using open source fluently quickly find that the\nopen approach is just their default process.  That culture shift is\nwhat lies at the top of the readiness learning curve."))}h.isMDXComponent=!0}}]);